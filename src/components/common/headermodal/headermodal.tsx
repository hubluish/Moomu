'use client';

import {
    Wrapper,
    TopRow,
    UserLeft,
    UserName,
    MenuList,
    MenuItem,
    MenuLabel,
} from './headermodal.styled';
import { useRouter } from 'next/navigation';
import React from 'react';

type HeaderModalProps = {
    userName?: string;
};

type IconProps = React.SVGProps<SVGSVGElement> & { size?: number };

export default function HeaderModal({ userName = 'User Name' }: HeaderModalProps) {
    const router = useRouter();

    const activate =
    (fn: () => void) =>
    (e: React.MouseEvent | React.KeyboardEvent) => {
        if ('key' in e) {
            if (e.key !== 'Enter' && e.key !== ' ') return;
            e.preventDefault();
        }
        fn();
    };
    
    return (
        <Wrapper>
        {/* 상단 사용자 정보 컨테이너 */}
        <TopRow>
            <UserLeft>
            <Avatar size={50} aria-hidden="true" />
            <UserName>{userName}</UserName>
            </UserLeft>
            <Bell size={32} aria-hidden="true" />
        </TopRow>

        {/* 하단 메뉴 컨테이너 */}
        <MenuList>
            <MenuItem
            role="button"
            tabIndex={0}
            aria-label="내 무드보드로 이동"
            onClick={activate(() => router.push('/mypage/moodboard'))}
            onKeyDown={activate(() => router.push('/mypage/moodboard'))}
            >
            <IconBoard size={18} aria-hidden="true" />
            <MenuLabel>내 무드보드</MenuLabel>
            </MenuItem>

            <MenuItem
            role="button"
            tabIndex={0}
            aria-label="플랜 업그레이드로 이동"
            onClick={activate(() => router.push('/planupgrade'))}
            onKeyDown={activate(() => router.push('/planupgrade'))}
            >
            <IconStarburst size={19} aria-hidden="true" />
            <MenuLabel>플랜 업그레이드</MenuLabel>
            </MenuItem>

            <MenuItem
            role="button"
            tabIndex={0}
            aria-label="설정으로 이동"
            onClick={activate(() => router.push('/settings'))}
            onKeyDown={activate(() => router.push('/settings'))}
            >
            <IconCog size={20} aria-hidden="true" />
            <MenuLabel>설정</MenuLabel>
            </MenuItem>

            <MenuItem role="button" tabIndex={0} className="logout">
            <IconLogout size={18} aria-hidden="true" />
            <MenuLabel className="logout">로그아웃</MenuLabel>
            </MenuItem>
        </MenuList>
        </Wrapper>
    );
}

/* ================== Icons ================== */

const Avatar = ({ size = 50, ...rest }: IconProps) => (
    <svg
        width={size}
        height={size}
        viewBox="0 0 50 50"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        {...rest}
    >
        <g clipPath="url(#clip0_4152_8510)">
        <path
            d="M25 0C11.2 0 0 11.2 0 25C0 38.8 11.2 50 25 50C38.8 50 50 38.8 50 25C50 11.2 38.8 0 25 0ZM25 10C29.825 10 33.75 13.925 33.75 18.75C33.75 23.575 29.825 27.5 25 27.5C20.175 27.5 16.25 23.575 16.25 18.75C16.25 13.925 20.175 10 25 10ZM25 45C19.925 45 13.925 42.95 9.65 37.8C14.0296 34.3655 19.4344 32.499 25 32.499C30.5656 32.499 35.9704 34.3655 40.35 37.8C36.075 42.95 30.075 45 25 45Z"
            fill="#C5C2FF"
        />
        </g>
        <defs>
        <clipPath id="clip0_4152_8510">
            <rect width="50" height="50" fill="white" />
        </clipPath>
        </defs>
    </svg>
);

const Bell = ({ size = 32, ...rest }: IconProps) => (
    <svg
        width={size}
        height={size}
        viewBox="0 0 32 32"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        {...rest}
    >
        <path
        d="M13.3333 28H18.6667C18.6667 29.4666 17.4667 30.6666 16 30.6666C14.5333 30.6666 13.3333 29.4666 13.3333 28ZM28 25.3333V26.6666H4V25.3333L6.66667 22.6666V14.6666C6.66667 10.5333 9.33333 6.93329 13.3333 5.73329V5.33329C13.3333 3.86663 14.5333 2.66663 16 2.66663C17.4667 2.66663 18.6667 3.86663 18.6667 5.33329V5.73329C22.6667 6.93329 25.3333 10.5333 25.3333 14.6666V22.6666L28 25.3333ZM22.6667 14.6666C22.6667 10.9333 19.7333 7.99996 16 7.99996C12.2667 7.99996 9.33333 10.9333 9.33333 14.6666V24H22.6667V14.6666Z"
        fill="black"
        />
    </svg>
);

const IconBoard = ({ size = 18, ...rest }: IconProps) => (
    <svg
        width={size}
        height={size}
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        {...rest}
    >
        <path
        d="M3.78557 0.499878C2.93309 0.499878 2.11553 0.838525 1.51273 1.44132C0.909936 2.04412 0.571289 2.86168 0.571289 3.71416V16.1427C0.571289 16.9952 0.909936 17.8128 1.51273 18.4156C2.11553 19.0184 2.93309 19.357 3.78557 19.357H16.2141C17.0666 19.357 17.8842 19.0184 18.487 18.4156C19.0898 17.8128 19.4284 16.9952 19.4284 16.1427V3.71416C19.4284 2.86168 19.0898 2.04412 18.487 1.44132C17.8842 0.838525 17.0666 0.499878 16.2141 0.499878H3.78557ZM2 3.71416C2 3.20267 2.13832 2.86156 2.5 2.49988C2.86168 2.1382 3.27409 1.99988 3.78557 1.99988H9.57129L9.6096 5.78538H2V3.71416ZM2 7.35702H9.57129V17.9999H3.78557C3.27409 17.9999 2.86168 17.8616 2.5 17.4999C2.13832 17.1382 2 16.6542 2 16.1427V7.35702ZM10.857 17.9999V13.357H18V16.1427C18 16.6542 17.8617 17.1382 17.5 17.4999C17.1383 17.8616 16.7256 17.9999 16.2141 17.9999H10.857ZM18 11.9999H10.857V1.99988H16.5C17.0115 1.99988 17.3768 2.37667 17.5 2.49988C17.7893 2.78922 18 3.20267 18 3.71416V11.9999Z"
        fill="black"
        />
    </svg>
);

const IconStarburst = ({ size = 19, ...rest }: IconProps) => (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 20 20" fill="none" {...rest}>
        <path d="M7.1071 3.448C7.7051 1.698 10.1231 1.645 10.8321 3.289L10.8921 3.449L11.6991 5.809C11.884 6.35023 12.1829 6.84551 12.5755 7.26142C12.9682 7.67734 13.4454 8.00421 13.9751 8.22L14.1921 8.301L16.5521 9.107C18.3021 9.705 18.3551 12.123 16.7121 12.832L16.5521 12.892L14.1921 13.699C13.6507 13.8838 13.1552 14.1826 12.7391 14.5753C12.323 14.9679 11.996 15.4452 11.7801 15.975L11.6991 16.191L10.8931 18.552C10.2951 20.302 7.8771 20.355 7.1691 18.712L7.1071 18.552L6.3011 16.192C6.11628 15.6506 5.81748 15.1551 5.42485 14.739C5.03222 14.3229 4.5549 13.9959 4.0251 13.78L3.8091 13.699L1.4491 12.893C-0.301896 12.295 -0.354896 9.877 1.2891 9.169L1.4491 9.107L3.8091 8.301C4.35034 8.11606 4.84562 7.81719 5.26153 7.42457C5.67744 7.03195 6.00432 6.55469 6.2201 6.025L6.3011 5.809L7.1071 3.448ZM9.0001 4.094L8.19411 6.454C7.9125 7.2793 7.45437 8.0333 6.85164 8.6635C6.24891 9.29369 5.51605 9.78493 4.7041 10.103L4.4541 10.194L2.0941 11L4.4541 11.806C5.27941 12.0876 6.03341 12.5457 6.6636 13.1485C7.29379 13.7512 7.78503 14.4841 8.1031 15.296L8.19411 15.546L9.0001 17.906L9.8061 15.546C10.0877 14.7207 10.5458 13.9667 11.1486 13.3365C11.7513 12.7063 12.4842 12.2151 13.2961 11.897L13.5461 11.807L15.9061 11L13.5461 10.194C12.7208 9.91239 11.9668 9.45427 11.3366 8.85154C10.7064 8.2488 10.2152 7.51595 9.89711 6.704L9.80711 6.454L9.0001 4.094ZM17.0001 1.80688e-07C17.1872 -2.35972e-07 17.3705 0.0524783 17.5293 0.151472C17.688 0.250465 17.8158 0.392003 17.8981 0.56L17.9461 0.677L18.2961 1.703L19.3231 2.053C19.5106 2.1167 19.6749 2.23462 19.7953 2.39182C19.9157 2.54902 19.9867 2.73842 19.9994 2.93602C20.012 3.13362 19.9657 3.33053 19.8663 3.50179C19.7669 3.67304 19.6189 3.81094 19.4411 3.898L19.3231 3.946L18.2971 4.296L17.9471 5.323C17.8833 5.51043 17.7653 5.6747 17.608 5.79499C17.4508 5.91529 17.2613 5.98619 17.0637 5.99872C16.8661 6.01125 16.6693 5.96484 16.4981 5.86538C16.3269 5.76591 16.1891 5.61787 16.1021 5.44L16.0541 5.323L15.7041 4.297L14.6771 3.947C14.4896 3.8833 14.3253 3.76538 14.2049 3.60819C14.0845 3.45099 14.0135 3.26158 14.0008 3.06398C13.9882 2.86638 14.0345 2.66947 14.1339 2.49821C14.2333 2.32696 14.3813 2.18906 14.5591 2.102L14.6771 2.054L15.7031 1.704L16.0531 0.677C16.1205 0.479426 16.2481 0.307909 16.4179 0.186499C16.5878 0.065089 16.7913 -0.000125281 17.0001 1.80688e-07Z" fill="black"/>
    </svg>
    
);

const IconCog = ({ size = 20, ...rest }: IconProps) => (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 21 20" fill="none" {...rest }>
        <path d="M18.8999 10.66C18.7396 10.4775 18.6512 10.2429 18.6512 10C18.6512 9.75711 18.7396 9.52251 18.8999 9.34002L20.1799 7.90002C20.3209 7.74269 20.4085 7.54472 20.4301 7.33452C20.4516 7.12433 20.4061 6.9127 20.2999 6.73002L18.2999 3.27002C18.1948 3.08754 18.0348 2.94289 17.8426 2.8567C17.6505 2.77051 17.4361 2.74718 17.2299 2.79002L15.3499 3.17002C15.1107 3.21945 14.8616 3.17961 14.6498 3.05802C14.4379 2.93643 14.2779 2.7415 14.1999 2.51002L13.5899 0.680017C13.5228 0.481396 13.395 0.308882 13.2245 0.186859C13.0541 0.0648361 12.8495 -0.000523977 12.6399 1.71846e-05H8.6399C8.42183 -0.0113649 8.20603 0.0489435 8.02546 0.171731C7.84489 0.294519 7.70948 0.473036 7.6399 0.680017L7.0799 2.51002C7.0019 2.7415 6.84187 2.93643 6.63001 3.05802C6.41815 3.17961 6.16911 3.21945 5.9299 3.17002L3.9999 2.79002C3.80445 2.7624 3.6052 2.79324 3.42724 2.87866C3.24929 2.96407 3.1006 3.10025 2.9999 3.27002L0.999896 6.73002C0.891056 6.91067 0.842118 7.1211 0.860079 7.33124C0.878039 7.54138 0.961979 7.74046 1.0999 7.90002L2.3699 9.34002C2.53022 9.52251 2.61863 9.75711 2.61863 10C2.61863 10.2429 2.53022 10.4775 2.3699 10.66L1.0999 12.1C0.961979 12.2596 0.878039 12.4587 0.860079 12.6688C0.842118 12.8789 0.891056 13.0894 0.999896 13.27L2.9999 16.73C3.10499 16.9125 3.26502 17.0571 3.45715 17.1433C3.64928 17.2295 3.86372 17.2529 4.0699 17.21L5.9499 16.83C6.18911 16.7806 6.43815 16.8204 6.65001 16.942C6.86187 17.0636 7.0219 17.2585 7.0999 17.49L7.7099 19.32C7.77948 19.527 7.91489 19.7055 8.09546 19.8283C8.27603 19.9511 8.49183 20.0114 8.7099 20H12.7099C12.9195 20.0006 13.1241 19.9352 13.2945 19.8132C13.465 19.6912 13.5928 19.5186 13.6599 19.32L14.2699 17.49C14.3479 17.2585 14.5079 17.0636 14.7198 16.942C14.9316 16.8204 15.1807 16.7806 15.4199 16.83L17.2999 17.21C17.5061 17.2529 17.7205 17.2295 17.9126 17.1433C18.1048 17.0571 18.2648 16.9125 18.3699 16.73L20.3699 13.27C20.4761 13.0873 20.5216 12.8757 20.5001 12.6655C20.4785 12.4553 20.3909 12.2573 20.2499 12.1L18.8999 10.66ZM17.4099 12L18.2099 12.9L16.9299 15.12L15.7499 14.88C15.0297 14.7328 14.2805 14.8551 13.6445 15.2238C13.0085 15.5925 12.53 16.1819 12.2999 16.88L11.9199 18H9.3599L8.9999 16.86C8.76975 16.1619 8.29128 15.5725 7.6553 15.2038C7.01932 14.8351 6.27012 14.7128 5.5499 14.86L4.3699 15.1L3.0699 12.89L3.8699 11.99C4.36185 11.44 4.63383 10.7279 4.63383 9.99002C4.63383 9.25208 4.36185 8.54004 3.8699 7.99002L3.0699 7.09002L4.3499 4.89002L5.5299 5.13002C6.25012 5.27724 6.99932 5.1549 7.6353 4.78622C8.27128 4.41753 8.74975 3.82818 8.9799 3.13002L9.3599 2.00002H11.9199L12.2999 3.14002C12.53 3.83818 13.0085 4.42753 13.6445 4.79622C14.2805 5.1649 15.0297 5.28724 15.7499 5.14002L16.9299 4.90002L18.2099 7.12002L17.4099 8.02002C16.9235 8.56878 16.6549 9.2767 16.6549 10.01C16.6549 10.7433 16.9235 11.4513 17.4099 12ZM10.6399 6.00002C9.84877 6.00002 9.07541 6.23461 8.41761 6.67414C7.75982 7.11366 7.24713 7.73838 6.94438 8.46928C6.64163 9.20019 6.56241 10.0045 6.71675 10.7804C6.8711 11.5563 7.25206 12.269 7.81147 12.8284C8.37088 13.3879 9.08361 13.7688 9.85954 13.9232C10.6355 14.0775 11.4397 13.9983 12.1706 13.6955C12.9015 13.3928 13.5262 12.8801 13.9658 12.2223C14.4053 11.5645 14.6399 10.7911 14.6399 10C14.6399 8.93915 14.2185 7.92174 13.4683 7.17159C12.7182 6.42144 11.7008 6.00002 10.6399 6.00002ZM10.6399 12C10.2443 12 9.85765 11.8827 9.52876 11.663C9.19986 11.4432 8.94351 11.1308 8.79214 10.7654C8.64076 10.3999 8.60116 9.9978 8.67833 9.60984C8.7555 9.22187 8.94598 8.86551 9.22568 8.5858C9.50539 8.3061 9.86175 8.11562 10.2497 8.03845C10.6377 7.96128 11.0398 8.00088 11.4053 8.15226C11.7707 8.30363 12.0831 8.55998 12.3028 8.88888C12.5226 9.21778 12.6399 9.60445 12.6399 10C12.6399 10.5304 12.4292 11.0392 12.0541 11.4142C11.679 11.7893 11.1703 12 10.6399 12Z" fill="black"/>
    </svg>
);

const IconLogout = ({ size = 18, ...rest }: IconProps) => (
    <svg
        width={size}
        height={size}
        viewBox="0 0 18 18"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        {...rest}
    >
        <path
        d="M2 18C1.45 18 0.979333 17.8043 0.588 17.413C0.196667 17.0217 0.000666667 16.5507 0 16V2C0 1.45 0.196 0.979333 0.588 0.588C0.98 0.196667 1.45067 0.000666667 2 0H8C8.28333 0 8.521 0.0960001 8.713 0.288C8.905 0.48 9.00067 0.717333 9 1C8.99933 1.28267 8.90333 1.52033 8.712 1.713C8.52067 1.90567 8.28333 2.00133 8 2H2V16H8C8.28333 16 8.521 16.096 8.713 16.288C8.905 16.48 9.00067 16.7173 9 17C8.99933 17.2827 8.90333 17.5203 8.712 17.713C8.52067 17.9057 8.28333 18.0013 8 18H2ZM14.175 10H7C6.71667 10 6.47933 9.904 6.288 9.712C6.09667 9.52 6.00067 9.28267 6 9C5.99933 8.71733 6.09533 8.48 6.288 8.288C6.48067 8.096 6.718 8 7 8H14.175L12.3 6.125C12.1167 5.94167 12.025 5.71667 12.025 5.45C12.025 5.18333 12.1167 4.95 12.3 4.75C12.4833 4.55 12.7167 4.44567 13 4.437C13.2833 4.42833 13.525 4.52433 13.725 4.725L17.3 8.3C17.5 8.5 17.6 8.73333 17.6 9C17.6 9.26667 17.5 9.5 17.3 9.7L13.725 13.275C13.525 13.475 13.2877 13.571 13.013 13.563C12.7383 13.555 12.5007 13.4507 12.3 13.25C12.1167 13.05 12.0293 12.8127 12.038 12.538C12.0467 12.2633 12.1423 12.034 12.325 11.85L14.175 10Z"
        fill="currentColor"
        />
    </svg>
);
